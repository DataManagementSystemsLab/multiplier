;
; Copyright (c) 2022-present, Trail of Bits, Inc.
; All rights reserved.
;
; This source code is licensed in accordance with the terms specified in
; the LICENSE file found in the root directory of this source tree.
;

; ------------------------------------------------------------------------------
; This file defines foreign types used by the rest of the Datalog, which can
; also be shared with client code.
; ------------------------------------------------------------------------------

#foreign FileId ```c++ uint64_t``` @transparent.
#foreign FileId ```flat uint64``` @transparent.

#foreign Path ```flat string```.
#foreign Path ```c++ std::string```.

#foreign Time ```c++ int64_t``` @transparent.
#foreign Time ```flat int64``` @transparent.

; NOTE(pag): We need to mark the compressed token lists as being referentially
;            transparent so that they are *NOT* interned and deduplicated,
;            otherwise they would occupy a lot of memory for large projects.
;
;            Instead, we use the stateful functor pattern to persist the token
;            lists.
#foreign CompressedTokenList ```flat [ubyte] (nested_flatbuffer: "mx.CompressedTokenList", force_align: 8)```.
#foreign CompressedTokenList ```c++ ::hyde::rt::Bytes``` @transparent.

#foreign IncludePath ```flat [ubyte] (nested_flatbuffer: "mx.IncludePath", force_align: 8)```.
#foreign IncludePath ```c++ ::hyde::rt::Bytes```.

#foreign CompileCommand ```flat [ubyte] (nested_flatbuffer: "mx.CompileCommand", force_align: 8)```.
#foreign CompileCommand ```c++ ::hyde::rt::Bytes```.

